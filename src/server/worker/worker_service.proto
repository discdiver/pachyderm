syntax = "proto3";
package worker;

import "client/pfs/pfs.proto";
import "client/pps/pps.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/empty.proto";

message Input {
  pfs.FileInfo file_info = 1;
  pfs.Commit parent_commit = 5;
  string name = 2;
  bool lazy = 3;
  string branch = 4;
  string git_url = 6 [(gogoproto.customname) = "GitURL"];
  bool empty_files = 7;
}

message CancelRequest {
  string job_id = 2 [(gogoproto.customname) = "JobID"];
  repeated string data_filters = 1;
}

message CancelResponse {
  bool success = 1;
}

service Worker {
  rpc Status(google.protobuf.Empty) returns (pps.WorkerStatus) {}
  rpc Cancel(CancelRequest) returns (CancelResponse) {}
}

enum State {
  RUNNING = 0;
  COMPLETE = 1;
  FAILED = 3;
}

message ChunkState {
  State state = 1;
  string datum_id = 2 [(gogoproto.customname) = "DatumID"];
}

message MergeState {
  State state = 1;
  pfs.Object tree = 2;
  uint64 size_bytes = 3;
  pfs.Object stats_tree = 4;
  uint64 stats_size_bytes = 5;
}

message Plan {
  repeated int64 chunks = 1;
  int64 merges = 2;
}
